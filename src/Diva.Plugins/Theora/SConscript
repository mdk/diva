import                          os;
Import                          ('CEnv');
Import                          ('divaEnv');
Import                          ('shellEnv');

# C ############################################################################

localEnvC = CEnv.Copy           ();
            
sourcesC = Split                ('DivaPluginsTheoraExporter.c');

localEnvC.Append                (CPPPATH='#src/Gdv/',
                                 LIBS= Split ('gdv'));

theora = localEnvC.SharedLibrary ('../libtheoraexporter', sourcesC);

# Mono #########################################################################

localEnvMono = divaEnv.Copy     ();

localEnvMono.Append             (REF = Split ('#src/Diva.PluginLib/pluginlib.dll \
                                               #src/Diva.Widgets/widgets.dll \
                                               #src/Diva.Core/core.dll'),
                                 RESOURCE = Split ('Theora/Resources/xiph-logo.png'));

sources = Split                 ('AssemblyInfo.cs \
                                  Diva.Plugins.Theora.ExportPlugin.cs \
                                  Diva.Plugins.Theora.Exporter.cs \
                                  Diva.Plugins.Theora.ExportSettings.cs \
                                  Diva.Plugins.Theora.VideoQualityScale.cs \
                                  Diva.Plugins.Theora.AudioQualityScale.cs \
                                  Diva.Plugins.Theora.Dialog.cs');

assemblyInfo = shellEnv.Subst   ('AssemblyInfo.cs', '#common/AssemblyInfo.cs.in')

theoradll = localEnvMono.Dll    ('../theoraexporter.dll', sources);

localEnvMono.Depends            (theoradll, theora);
localEnvMono.Depends            (theoradll, assemblyInfo);

# INSTALL ######################################################################

Alias                           ("install", localEnvC.Install (os.path.join (localEnvC ['DESTDIR'], 
                                                                             localEnvC ['LIBDIR'], 
                                                                             'diva', 'plugins'), theora));

Alias                           ("install", localEnvMono.Install (os.path.join (localEnvMono ['DESTDIR'], 
                                                                                localEnvMono ['LIBDIR'], 
                                                                                'diva', 'plugins'), theoradll));

